--> if you want to give inline styles to html then you can wrap that in to JS object and that Js object is been assigned to style attribute in your JSX
eg
const styleCard={
  backgroundColor:'#f0f0f0'
};// js object 

const ReastaurantCard = ()=>{
  return (
    <div className='rest-card' style={styleCard}> //wrap it in {} 
     <h3>Meghana foods</h3>
    </div>
  );
};


--> how can we make the coimg data dynamic?
->we can get that through props.shortform for properties. we can pass data as a props to a component.
-> props are just normal argument to a function (functinal component).
eg,

<ReastaurantCard resName='meghana foods' cuisine='Pizza,Biryani,Asian'/>
<ReastaurantCard resName='KFC' cuisine='Fast food,burgur'/>

here we are passing arguments to the functinal componenet which are props 
--> react binds that argument in props and we pass it in ReastaurantCard component like 
eg,
const ReastaurantCard = (props)=>{
cosole.log(props);
  return (
    <div className='rest-card' style={{backgroundColor:'#f0f0f0'}}>
     <img className='res-logo' alt='rest-logo' src='https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/dfcf6d9fbd77b2ff1006ccfb40e2ca55'></img>
     <h3>Meghana foods</h3>
     <h4>Pizza,Biryani,Asian</h4>
     <h4>4.3 stars</h4>
     <h4>38 minuntes</h4>
    </div>
  );
};   

these props are nothing but object now if we do console.log(props); it will show the objects


so to acess that props in dynamic way you can acess it using JS 
eg,
const ReastaurantCard = (props)=>{
cosole.log(props);
  return (
    <div className='rest-card' style={{backgroundColor:'#f0f0f0'}}>
     <img className='res-logo' alt='rest-logo' src='https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/dfcf6d9fbd77b2ff1006ccfb40e2ca55'></img>
     <h3>{props.resName}</h3>
     <h4>{props.cuisine}</h4> //{ acess in this way}
     <h4>4.3 stars</h4>
     <h4>38 minuntes</h4>
    </div>
  );
}; 


->we can do it in a destructring way also like eg,

const ReastaurantCard = ({props})=>{
cosole.log(props);
const{resName,cuisine}=props;
  return (
    <div className='rest-card' style={{backgroundColor:'#f0f0f0'}}>
     <img className='res-logo' alt='rest-logo' src='https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/dfcf6d9fbd77b2ff1006ccfb40e2ca55'></img>
     <h3>{resName}</h3>
     <h4>{cuisine}</h4> //{ acess in this way}
     <h4>4.3 stars</h4>
     <h4>38 minuntes</h4>
    </div>
  );
}; 

==> so the major learning is when you want to pass in the data dynimacally to the component you pass it through props.(..IMP..)


config driven UI --> means controlling your UI using data. data coming from backend according to that Our UI will change that known as config driven UI


--> if we have large amount of data this will be diffcult for us to pass like this  so instead of like this we can store that data in JS object and use it 
<ReastaurantCard resName='meghana foods' cuisine='Pizza,Biryani,Asian'/>
<ReastaurantCard resName='KFC' cuisine='Fast food,burgur'/>

eg,
resObj={
data object;
};

<ReastaurantCard resData={resObj}/>
<ReastaurantCard resData={resObj}/>

const ReastaurantCard = (props)=>{
const{resData}=props;
  return (
    <div className='rest-card' style={{backgroundColor:'#f0f0f0'}}>
     <img className='res-logo' alt='rest-logo' src='https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/dfcf6d9fbd77b2ff1006ccfb40e2ca55'></img>
     <h3>{resData.data.name}</h3>
     <h4>{resData.data.cuisines}</h4> //{ acess in this way}
     <h4>{resData.data.rating} stars</h4>
     <h4>{resData.data.deliveryTime}</h4>
    </div>
  );
};


--> cleaning up the code .
resData.data.cuisines --> this kind of looking messy so we use optional chaining in that 

const {name,cuisines,rating,deliveryTime}=resData?.data (optional chaining)

after this we can write as 
const{resData}=props;
const {name,cuisines,rating,deliveryTime}=resData?.data 
  return (
    <div className='rest-card' style={{backgroundColor:'#f0f0f0'}}>
     <img className='res-logo' alt='rest-logo' src='https://media-assets.swiggy.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_660/dfcf6d9fbd77b2ff1006ccfb40e2ca55'></img>
     <h3>{name}</h3>
     <h4>{cuisines}</h4> //{ acess in this way}
     <h4>{rating} stars</h4>
     <h4>{deliveryTime}</h4>
    </div>
  );

what is optional chaining ?



--> warning-->each child in a list should have unique key property 
means each of the item you are rendering should have unique item
whenever you are looping on anything then provide unique key 

const Body =()=>{
 return (
   <div className='body'>
    <div className='search'>search</div>
    <div className='rest-container'>
      {
       restaurantList.map(restaurant=><ReastaurantCard key={restaurant.data.id} resData={restaurant}/>)
      }
    </div>
   </div>
 );
};

-->why we have to use key ?
->if we do not provide any key -> if we add any resaturent card in that list then and if we do not provide key then react will re-render all that dom tree and display 
-> when we give key to that react will eactly knows which ids are prosent and which has to be added so according to that it will add that to dom tree (according to id) --> whenever you are looping with map you have to use it key there for performace boosting purpose
-> never uses index as the key in for loop bad practice .

unique key is best.



